version: '3.8'

services:
  # Main testing application
  audio-tests:
    build: .
    container_name: audio_processing_tests
    environment:
      - PYTHONPATH=/app
      - PYTEST_CURRENT_TEST=1
      - DATABASE_URL=postgresql://testuser:testpass@postgres:5432/audio_test_db
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://testuser:testpass@rabbitmq:5672//
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - ./test-reports:/app/test-reports
      - ./coverage_html:/app/coverage_html
      - ./logs:/app/logs
      - .:/app:rw
    networks:
      - audio_test_network
    command: ["./scripts/run_tests.sh", "all", "--parallel"]

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: audio_postgres
    environment:
      POSTGRES_DB: audio_test_db
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    networks:
      - audio_test_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d audio_test_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: audio_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - audio_test_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: audio_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: testuser
      RABBITMQ_DEFAULT_PASS: testpass
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - audio_test_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: audio_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - audio_test_network
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: audio_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    networks:
      - audio_test_network
    profiles:
      - monitoring
    depends_on:
      - prometheus

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  audio_test_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 